{"version":3,"file":"design.jsx","sourceRoot":"","sources":["design.tsx"],"names":[],"mappings":"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","sourcesContent":["import { getAllPosts } from '../lib/api'\nimport Head from 'next/head'\nimport Post from '../interfaces/post'\nimport styled from 'styled-components'\nimport Link from 'next/link'\nimport { \n  Box,\n  Breadcrumbs,\n  Container,\n  DesignGrid,\n  Grid,\n  GridCol,\n  Icon,\n  Layout,\n  Navigation,\n  SectionSeparator,\n  Stack,\n  Typography,\n} from '../components'\nimport tokens from '@/styles/tokens.json'\n\nconst { base: { breakpoint }, semantic: { color, spacing } } = tokens\n\nconst DesignSystemCard = styled(Link)`\n  display: block;\n  background-color: ${color.background.emphasis};\n  border-radius: ${tokens.base.border.radius[4]};\n  padding: ${spacing.layout['2xl']};\n  text-decoration: none;\n  transition: ${tokens.semantic.motion.hover};\n\n  &:hover {\n    background-color: ${tokens.component.button.hover.backgroundColor};\n  }\n  \n  @media (max-width: ${breakpoint.md}) {\n    padding: ${spacing.layout.lg};\n  }\n`\n\ntype Props = {\n  allPosts: Post[]\n}\n\nexport default function Design({ allPosts }: Props) {\n  const morePosts = allPosts\n  return (\n    <>\n      <Layout>\n        <Head>\n          <title>{`Common Origin website`}</title>\n        </Head>\n        <Navigation/>\n        <Breadcrumbs breadcrumbs={[{ label: 'Home', url: '/' }, { label: 'Design', url: '/design' }]} />\n        <section>\n          <Container>\n            <Box my=\"4xl\">\n              <Typography variant=\"h1\">Design</Typography>\n            </Box>\n            <SectionSeparator />\n            <Box bg=\"surface\" p='2xl' borderRadius='4'>              \n              <Grid cols={3} gap=\"6\">\n                <GridCol span={3} spanMd={1}>\n                  <Typography variant=\"h2\">Common Origin</Typography>\n                  <Typography variant=\"h4\" color=\"subdued\">Design System</Typography>\n                </GridCol>\n                <GridCol span={3} spanMd={1}>\n                  <DesignSystemCard href=\"/design/components\">\n                    <Stack direction=\"row\" gap=\"sm\" alignItems=\"center\" justifyContent=\"space-between\">\n                      <Typography color=\"inverse\" variant=\"h4\">Components</Typography>\n                      <Icon name=\"directionRight\" size=\"xl\" />\n                    </Stack>\n                  </DesignSystemCard>\n                </GridCol>\n                \n                <GridCol span={3} spanMd={1}>\n                  <DesignSystemCard href=\"/design/tokens\">\n                    <Stack direction=\"row\" gap=\"sm\" alignItems=\"center\" justifyContent=\"space-between\">\n                      <Typography color=\"inverse\" variant=\"h4\">Design tokens</Typography>\n                      <Icon name=\"directionRight\" size=\"xl\" />\n                    </Stack>\n                  </DesignSystemCard>\n                </GridCol>\n                \n              </Grid>\n            </Box>\n          </Container>\n        </section>\n        <SectionSeparator />\n        {morePosts.length > 0 && <DesignGrid posts={morePosts} />}\n      </Layout>\n    </>\n  )\n}\n\nexport const getStaticProps = async () => {\n  const allPosts = getAllPosts([\n    'title',\n    'labels',\n    'tag',\n    'date',\n    'slug',\n    'author',\n    'coverImage',\n    'excerpt',\n  ])\n\n  return {\n    props: { allPosts },\n  }\n}\n"]}