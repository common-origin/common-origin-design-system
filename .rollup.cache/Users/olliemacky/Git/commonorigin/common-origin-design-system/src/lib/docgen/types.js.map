{"version":3,"file":"types.js","sourceRoot":"","sources":["types.ts"],"names":[],"mappings":"","sourcesContent":["import { ReactNode } from 'react'\n\nexport interface PropInfo {\n  name: string\n  type: string\n  default?: string\n  required: boolean\n  description?: string\n}\n\nexport interface ComponentExample {\n  name: string\n  description?: string\n  code: string\n  component?: ReactNode // to be removed later\n  renderComponent?: () => ReactNode\n}\n\nexport interface AccessibilityInfo {\n  notes: string[]\n  keyboardNavigation?: string\n  screenReader?: string\n  colorContrast?: string\n  focusManagement?: string\n}\n\nexport interface ComponentDocumentation {\n  id: string\n  name: string\n  description: string\n  category: 'Atoms' | 'Molecules' | 'Organisms' | 'Templates' | 'Layout' | 'Components'\n  \n  // Props can be auto-extracted or manually specified\n  props?: PropInfo[]\n  \n  // Curated content\n  tokens: string[]\n  examples: ComponentExample[]\n  \n  // Optional extended documentation\n  accessibility?: AccessibilityInfo\n  notes?: string[]\n  deprecatedProps?: string[]\n  migrationGuide?: string\n  \n  // Meta information\n  version?: string\n  lastModified?: Date\n  filePath?: string\n}\n\nexport interface ComponentMetadata {\n  filePath: string\n  componentName: string\n  interfaceName: string\n  hasDefaultExport: boolean\n  hasNamedExport: boolean\n  dependencies: string[]\n}\n\nexport interface ExtractionOptions {\n  includePrivateProps?: boolean\n  includeInheritedProps?: boolean\n  extractJSDoc?: boolean\n  extractDefaultValues?: boolean\n}\n"]}