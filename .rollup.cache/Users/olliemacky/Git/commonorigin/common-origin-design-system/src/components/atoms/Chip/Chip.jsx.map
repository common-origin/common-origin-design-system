{"version":3,"file":"Chip.jsx","sourceRoot":"","sources":["Chip.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport tokens from '@/styles/tokens.json'\n\nconst { component: { chip } } = tokens\n\n// Props interface with improved naming and additional options\nexport interface ChipProps {\n  children?: React.ReactNode\n  variant?: 'default' | 'emphasis' | 'subtle' | 'interactive' | 'light' | 'dark'\n  size?: 'small' | 'medium' | 'large'\n  onClick?: () => void\n  disabled?: boolean\n  'data-testid'?: string\n  // Additional accessibility props\n  'aria-label'?: string\n  'aria-describedby'?: string\n  role?: string\n  \n  // Legacy API support\n  title?: string\n}\n\n// Internal props for styled components with $ prefix for proper filtering\ninterface InternalStyledProps {\n  $variant: 'default' | 'emphasis' | 'subtle' | 'interactive'\n  $size: ChipProps['size']\n  $disabled?: boolean\n  $clickable?: boolean\n}\n\n// Helper functions to get styles as objects for CSS custom properties\nconst getVariantStylesAsObject = (variant: 'default' | 'emphasis' | 'subtle' | 'interactive') => {\n  switch (variant) {\n    case 'emphasis':\n      return {\n        backgroundColor: chip.variants.emphasis.backgroundColor,\n        color: chip.variants.emphasis.textColor\n      }\n    case 'subtle':\n      return {\n        backgroundColor: chip.variants.subtle.backgroundColor,\n        color: chip.variants.subtle.textColor\n      }\n    case 'interactive':\n      return {\n        backgroundColor: chip.variants.interactive.backgroundColor,\n        color: chip.variants.interactive.textColor\n      }\n    case 'default':\n    default:\n      return {\n        backgroundColor: chip.default.backgroundColor,\n        color: chip.default.textColor\n      }\n  }\n}\n\nconst getSizeStylesAsObject = (size: ChipProps['size']) => {\n  switch (size) {\n    case 'small':\n      return {\n        font: chip.sizes.small.font,\n        padding: chip.sizes.small.padding\n      }\n    case 'large':\n      return {\n        font: chip.sizes.large.font,\n        padding: chip.sizes.large.padding\n      }\n    case 'medium':\n    default:\n      return {\n        font: chip.sizes.medium.font,\n        padding: chip.sizes.medium.padding\n      }\n  }\n}\n\n// Base styled component using CSS variables to avoid prop leaking\nconst BaseChip = styled.span.withConfig({\n  shouldForwardProp: (prop) => !prop.startsWith('$')\n})`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  height: max-content;\n  border-radius: ${chip.default.borderRadius};\n  box-sizing: border-box;\n  user-select: none;\n  white-space: nowrap;\n  transition: ${tokens.semantic.motion.interactive};\n  \n  /* Use CSS custom properties set by wrapper */\n  background-color: var(--chip-bg-color);\n  color: var(--chip-text-color);\n  font: var(--chip-font);\n  padding: var(--chip-padding);\n  opacity: var(--chip-opacity, 1);\n  cursor: var(--chip-cursor, default);\n  \n  &:hover {\n    opacity: var(--chip-hover-opacity, var(--chip-opacity, 1));\n  }\n  \n  &:active {\n    opacity: var(--chip-active-opacity, var(--chip-opacity, 1));\n  }\n  \n  &:focus-visible {\n    outline: 2px solid ${chip.variants.interactive.backgroundColor};\n    outline-offset: 2px;\n  }\n`\n\n// Wrapper component that applies styles via CSS custom properties\nconst StyledChip: React.FC<React.PropsWithChildren<InternalStyledProps & React.HTMLAttributes<HTMLSpanElement>>> = ({\n  $variant,\n  $size,\n  $disabled,\n  $clickable,\n  children,\n  style,\n  ...htmlProps\n}) => {\n  // Get styles for variant and size\n  const variantStyles = getVariantStylesAsObject($variant)\n  const sizeStyles = getSizeStylesAsObject($size)\n  \n  // Create CSS custom properties object\n  const cssProps = {\n    '--chip-bg-color': variantStyles.backgroundColor,\n    '--chip-text-color': variantStyles.color,\n    '--chip-font': sizeStyles.font,\n    '--chip-padding': sizeStyles.padding,\n    '--chip-opacity': $disabled ? '0.6' : '1',\n    '--chip-cursor': $disabled ? 'not-allowed' : ($clickable ? 'pointer' : 'default'),\n    '--chip-hover-opacity': $disabled ? '0.6' : ($clickable ? '0.8' : '1'),\n    '--chip-active-opacity': $disabled ? '0.6' : ($clickable ? '0.9' : '1')\n  }\n  \n  return (\n    <BaseChip\n      style={{ ...cssProps, ...style }}\n      {...htmlProps}\n    >\n      {children}\n    </BaseChip>\n  )\n}\n\nexport const Chip: React.FC<ChipProps> = ({\n  children,\n  variant = 'default',\n  size = 'medium',\n  onClick,\n  disabled = false,\n  'data-testid': dataTestId,\n  'aria-label': ariaLabel,\n  'aria-describedby': ariaDescribedBy,\n  role,\n  title, // Legacy prop support\n  ...props\n}) => {\n  const isClickable = Boolean(onClick && !disabled)\n  \n  // Map legacy variants to new variants for backward compatibility\n  const normalizedVariant: 'default' | 'emphasis' | 'subtle' | 'interactive' = \n    variant === 'light' ? 'default' :\n    variant === 'dark' ? 'emphasis' :\n    variant as 'default' | 'emphasis' | 'subtle' | 'interactive'\n  \n  // Support legacy title prop - prioritize children over title\n  const content = children !== undefined ? children : title\n  \n  // Remove styled-only props from the rest\n  const { variant: _v, size: _s, disabled: _d, clickable: _c, ...htmlProps } = props as Record<string, any>\n  const handleClick = () => {\n    if (onClick && !disabled) {\n      onClick()\n    }\n  }\n  \n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (isClickable && (event.key === 'Enter' || event.key === ' ')) {\n      event.preventDefault()\n      handleClick()\n    }\n  }\n  \n  return (\n    <StyledChip\n      $variant={normalizedVariant}\n      $size={size}\n      $disabled={disabled || undefined}\n      $clickable={isClickable || undefined}\n      onClick={isClickable ? handleClick : undefined}\n      onKeyDown={isClickable ? handleKeyDown : undefined}\n      tabIndex={isClickable ? 0 : undefined}\n      role={role || (isClickable ? 'button' : undefined)}\n      aria-label={ariaLabel}\n      aria-describedby={ariaDescribedBy}\n      aria-disabled={disabled ? 'true' : undefined}\n      data-testid={dataTestId}\n      {...htmlProps}\n    >\n      {content}\n    </StyledChip>\n  )\n}\n\n// Legacy props support for backward compatibility\nexport interface LegacyChipProps {\n  title: string\n  variant?: 'light' | 'dark'\n}\n\n// Legacy component for backward compatibility\nexport const LegacyChip: React.FC<LegacyChipProps> = ({ title, variant = 'light' }) => {\n  // Map legacy variants to new variants\n  const newVariant = variant === 'dark' ? 'emphasis' : 'default'\n  \n  return (\n    <Chip variant={newVariant}>\n      {title}\n    </Chip>\n  )\n}\n"]}