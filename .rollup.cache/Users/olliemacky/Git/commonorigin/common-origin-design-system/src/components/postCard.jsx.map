{"version":3,"file":"postCard.jsx","sourceRoot":"","sources":["postCard.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,MAAM,MAAM,mBAAmB,CAAA;AAEtC,OAAO,IAAI,MAAM,WAAW,CAAA;AAC5B,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,IAAI,CAAA;AACtD,OAAO,MAAM,MAAM,sBAAsB,CAAA;AAGvC,IAAA,KAEE,MAAM,KAF+B,EAA/B,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,UAAU,gBAAA,EAChB,IAAI,GACvB,MAAM,oBADiB,CACjB;AAWV,IAAM,aAAa,GAAG,MAAM,CAAC,GAAG,oHAAA,iDAG/B,IAAA,CAAA;AAED,IAAM,YAAY,GAAG,MAAM,CAAC,GAAG,+FAAA,qBACZ,EAAU,KAC5B,KADkB,OAAO,CAAC,CAAC,CAAC,CAC5B,CAAA;AAED,IAAM,KAAK,GAAG,MAAM,CAAC,EAAE,qQAAA,iBACR,EAAW,sBACP,EAAU,gDAIhB,EAAY,qGAOxB,KAZc,QAAQ,CAAC,CAAC,CAAC,EACP,OAAO,CAAC,CAAC,CAAC,EAIhB,IAAI,CAAC,OAAO,CAOxB,CAAA;AAED,IAAM,WAAW,GAAG,MAAM,CAAC,GAAG,mIAAA,iBACf,EAAW,sBACP,EAAU,cAClB,EAAY,KACtB,KAHc,QAAQ,CAAC,CAAC,CAAC,EACP,OAAO,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,OAAO,CACtB,CAAA;AAED,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,yJAAA,iBACT,EAAW,oBACT,EAAa,sBACX,EAAU,cAClB,EAAY,KACtB,KAJc,QAAQ,CAAC,CAAC,CAAC,EACT,UAAU,CAAC,CAAC,CAAC,EACX,OAAO,CAAC,CAAC,CAAC,EAClB,IAAI,CAAC,OAAO,CACtB,CAAA;AAED,MAAM,CAAC,IAAM,QAAQ,GAAG,UAAC,EAOjB;QANN,KAAK,WAAA,EACL,UAAU,gBAAA,EACV,IAAI,UAAA,EACJ,OAAO,aAAA,EACP,MAAM,YAAA,EACN,IAAI,UAAA;IAEJ,OAAO,CACL,CAAC,aAAa,CACZ;MAAA,CAAC,YAAY,CACX;QAAA,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,EACxD;MAAA,EAAE,YAAY,CACd;MAAA,CAAC,KAAK,CACJ;QAAA,CAAC,IAAI,CACH,IAAI,CAAC,CAAC,iBAAU,IAAI,CAAE,CAAC,CAEvB;UAAA,CAAC,KAAK,CACR;QAAA,EAAE,IAAI,CACR;MAAA,EAAE,KAAK,CACP;MAAA,CAAC,WAAW,CACV;QAAA,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAClC;MAAA,EAAE,WAAW,CACb;MAAA,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,OAAO,CAC3B;MAAA,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EACrD;IAAA,EAAE,aAAa,CAAC,CACjB,CAAA;AACH,CAAC,CAAA","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport type Author from '../../interfaces/author'\nimport Link from 'next/link'\nimport { Avatar, CoverImage, DateFormatter } from './'\nimport tokens from '@/styles/tokens.json'\n\nconst { \n  base: { spacing, fontSize, lineHeight },\n  semantic: { color: { text } } \n} = tokens\n\ntype Props = {\n  title: string\n  coverImage: string\n  date: string\n  excerpt: string\n  author: Author\n  slug: string\n}\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ImageWrapper = styled.div`\n  margin-bottom: ${spacing[6]};\n`\n\nconst Title = styled.h3`\n  font-size: ${fontSize[8]};\n  margin-bottom: ${spacing[3]};\n  line-height: 1.2;\n  \n  a {\n    color: ${text.default};\n    text-decoration: none;\n    \n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`\n\nconst DateWrapper = styled.div`\n  font-size: ${fontSize[2]};\n  margin-bottom: ${spacing[4]};\n  color: ${text.subdued};\n`\n\nconst Excerpt = styled.p`\n  font-size: ${fontSize[4]};\n  line-height: ${lineHeight[4]};\n  margin-bottom: ${spacing[4]};\n  color: ${text.default};\n`\n\nexport const PostCard = ({\n  title,\n  coverImage,\n  date,\n  excerpt,\n  author,\n  slug,\n}: Props) => {\n  return (\n    <CardContainer>\n      <ImageWrapper>\n        <CoverImage slug={slug} title={title} src={coverImage} />\n      </ImageWrapper>\n      <Title>\n        <Link\n          href={`/posts/${slug}`}\n        >\n          {title}\n        </Link>\n      </Title>\n      <DateWrapper>\n        <DateFormatter dateString={date} />\n      </DateWrapper>\n      <Excerpt>{excerpt}</Excerpt>\n      <Avatar name={author.name} picture={author.picture} />\n    </CardContainer>\n  )\n}\n\n"]}