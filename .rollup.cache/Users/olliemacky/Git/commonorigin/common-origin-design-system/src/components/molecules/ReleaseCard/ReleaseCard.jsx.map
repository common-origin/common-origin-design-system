{"version":3,"file":"ReleaseCard.jsx","sourceRoot":"","sources":["ReleaseCard.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,MAAM,MAAM,mBAAmB,CAAA;AACtC,OAAO,KAAK,MAAM,YAAY,CAAA;AAC9B,OAAO,IAAI,MAAM,WAAW,CAAA;AAC5B,OAAO,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAA;AACzC,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAA;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAA;AACjE,OAAO,MAAM,MAAM,sBAAsB,CAAA;AAUzC,IAAM,iBAAiB,GAAG,MAAM,CAAC,GAAG,kYAAA,0EAMf,EAA4B,uOAerB,EAAmC,UAE9D,KAjBoB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAerB,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAE9D,CAAA;AAED,MAAM,CAAC,IAAM,WAAW,GAA+B,UAAC,EAMvD;QALC,KAAK,WAAA,EACL,UAAU,gBAAA,EACV,MAAM,YAAA,EACN,IAAI,UAAA,EACJ,IAAI,UAAA;IAEJ,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,EAAE;QACxB,OAAO,IAAI,CAAA;KACZ;IAED,OAAO,CACL,CAAC,iBAAiB,CAChB;MAAA,CAAC,IAAI,CACH,IAAI,CAAC,CAAC,oBAAa,IAAI,CAAE,CAAC,CAC1B,UAAU,CAAC,CAAC,KAAK,CAAC,CAElB;QAAA,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAChC;UAAA,CAAC,KAAK,CACJ,GAAG,CAAC,CAAC,KAAK,CAAC,CACX,GAAG,CAAC,CAAC,UAAU,CAAC,CAChB,KAAK,CAAC,CAAC,GAAG,CAAC,CACX,MAAM,CAAC,CAAC,GAAG,CAAC,CACZ,KAAK,CAAC,yFAAyF,CAC/F,WAAW,CAAC,MAAM,CAClB,WAAW,CAAC,CAAC,UAAU,CAAC,CACxB,KAAK,CAAC,CAAC;YACL,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,MAAM;SACf,CAAC,EAEJ;UAAA,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAClC;YAAA,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE,UAAU,CAC/C;YAAA,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,EAAE,UAAU,CAChE;YAAA,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAClC;UAAA,EAAE,KAAK,CACT;QAAA,EAAE,KAAK,CACT;MAAA,EAAE,IAAI,CACR;IAAA,EAAE,iBAAiB,CAAC,CACrB,CAAA;AACH,CAAC,CAAA","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport { Stack } from '../../atoms/Stack'\nimport { Typography } from '../../atoms/Typography'\nimport { DateFormatter } from '../../../components/dateFormatter'\nimport tokens from '@/styles/tokens.json'\n\nexport type ReleaseCardProps = {\n  title: string\n  coverImage?: string\n  artist?: string\n  date?: string\n  slug?: string\n}\n\nconst ReleaseCardStyled = styled.div`\n  a {\n    text-decoration: none;\n  }\n\n  img {\n    border-radius: ${tokens.base.border.radius[2]};\n    transition: ease opacity 0.2s;\n    width: 100%;\n    height: auto;\n    display: block;\n  }\n\n  &:hover {\n    img {\n      opacity: 0.8;\n    }\n  }\n\n  &:focus-within {\n    outline: none;\n    box-shadow: 0 0 0 2px ${tokens.semantic.color.border.strong};\n  }\n`\n\nexport const ReleaseCard: React.FC<ReleaseCardProps> = ({\n  title,\n  coverImage,\n  artist,\n  date,\n  slug,\n}) => {\n  if (!coverImage || !date) {\n    return null\n  }\n  \n  return (\n    <ReleaseCardStyled>\n      <Link\n        href={`/releases/${slug}`}\n        aria-label={title}\n      >\n        <Stack direction=\"column\" gap='sm'>\n          <Image \n            alt={title} \n            src={coverImage}\n            width={300}\n            height={300}\n            sizes=\"(max-width: 640px) 50vw, (max-width: 1024px) 25vw, (max-width: 1280px) 16.66vw, 14.28vw\"\n            placeholder=\"blur\"\n            blurDataURL={coverImage}\n            style={{\n              width: '100%',\n              height: 'auto',\n            }}\n          />\n          <Stack direction=\"column\" gap='none'>\n            <Typography variant=\"small\">{title}</Typography>\n            <Typography variant=\"label\" color=\"subdued\">{artist}</Typography>\n            <DateFormatter dateString={date} />\n          </Stack>\n        </Stack>\n      </Link>\n    </ReleaseCardStyled>\n  )\n}\n"]}