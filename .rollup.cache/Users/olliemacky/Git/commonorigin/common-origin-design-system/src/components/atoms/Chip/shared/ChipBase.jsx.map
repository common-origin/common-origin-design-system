{"version":3,"file":"ChipBase.jsx","sourceRoot":"","sources":["ChipBase.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport tokens from '../../../../styles/tokens.json'\nimport { InternalStyledProps } from './types'\nimport { getVariantStylesAsObject, getSizeStylesAsObject, chipTokens } from './utils'\n\n// Base styled component using CSS variables to avoid prop leaking\nexport const BaseChipStyled = styled.span.withConfig({\n  shouldForwardProp: (prop) => !prop.startsWith('$')\n})`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  height: max-content;\n  border-radius: 12px;\n  box-sizing: border-box;\n  user-select: none;\n  white-space: nowrap;\n  transition: width ${tokens.semantic.motion.interactive};\n  \n  /* Use CSS custom properties set by wrapper */\n  background-color: var(--chip-bg-color);\n  color: var(--chip-text-color);\n  font: var(--chip-font);\n  padding: var(--chip-padding);\n  opacity: var(--chip-opacity, 1);\n  cursor: var(--chip-cursor, default);\n  \n  &:hover {\n    opacity: var(--chip-hover-opacity, var(--chip-opacity, 1));\n  }\n  \n  &:active {\n    opacity: var(--chip-active-opacity, var(--chip-opacity, 1));\n  }\n  \n  &:focus-visible {\n    outline: 2px solid ${chipTokens.variants.interactive.backgroundColor};\n    outline-offset: 2px;\n  }\n`\n\n// Icon container for selected indicator or leading icons\nexport const IconContainer = styled.span`\n  display: inline-flex;\n  align-items: center;\n  margin-right: ${tokens.semantic.spacing.layout.sm};\n`\n\n// Close button for dismissible chips\nexport const CloseButton = styled.button.withConfig({\n  shouldForwardProp: (prop) => !prop.startsWith('$')\n})<{ $disabled?: boolean }>`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: ${tokens.semantic.spacing.layout.sm};\n  background: transparent;\n  border: none;\n  padding: 0;\n  cursor: ${props => props.$disabled ? 'not-allowed' : 'pointer'};\n  opacity: ${props => props.$disabled ? '0.6' : '1'};\n  color: inherit;\n  transition: ${tokens.semantic.motion.transition.fast};\n  \n  &:hover:not(:disabled) {\n    opacity: 0.7;\n  }\n  \n  &:active:not(:disabled) {\n    opacity: 0.9;\n  }\n  \n  &:focus-visible {\n    outline: 2px solid ${chipTokens.variants.interactive.backgroundColor};\n    outline-offset: 2px;\n    border-radius: 2px;\n  }\n`\n\n// Wrapper component that applies styles via CSS custom properties\nexport const StyledChipWrapper: React.FC<React.PropsWithChildren<InternalStyledProps & React.HTMLAttributes<HTMLSpanElement>>> = ({\n  $variant,\n  $size,\n  $disabled,\n  $clickable,\n  $selected,\n  children,\n  style,\n  ...htmlProps\n}) => {\n  // Get styles for variant and size\n  const variantStyles = getVariantStylesAsObject($variant, $selected)\n  const sizeStyles = getSizeStylesAsObject($size)\n  \n  // Create CSS custom properties object\n  const cssProps = {\n    '--chip-bg-color': variantStyles.backgroundColor,\n    '--chip-text-color': variantStyles.color,\n    '--chip-font': sizeStyles.font,\n    '--chip-padding': sizeStyles.padding,\n    '--chip-opacity': $disabled ? '0.6' : '1',\n    '--chip-cursor': $disabled ? 'not-allowed' : ($clickable ? 'pointer' : 'default'),\n    '--chip-hover-opacity': $disabled ? '0.6' : ($clickable ? '0.8' : '1'),\n    '--chip-active-opacity': $disabled ? '0.6' : ($clickable ? '0.9' : '1')\n  }\n  \n  return (\n    <BaseChipStyled\n      style={{ ...cssProps, ...style }}\n      {...htmlProps}\n    >\n      {children}\n    </BaseChipStyled>\n  )\n}\n"]}