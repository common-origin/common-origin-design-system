{"version":3,"file":"IconButton.jsx","sourceRoot":"","sources":["IconButton.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Icon } from '../Icon'\nimport tokens from '@/styles/tokens.json'\nimport iconsData from '@/styles/icons.json'\n\nconst { semantic: { motion }, component: { iconButton } } = tokens\n\nexport interface IconButtonProps extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, 'onClick'> {\n  variant: 'primary' | 'secondary' | 'naked'\n  size?: 'small' | 'medium' | 'large'\n  iconName: keyof typeof iconsData\n  url?: string\n  onClick?: () => void\n  // Accessibility props\n  'aria-label': string // Required for screen readers\n  'aria-describedby'?: string\n  'aria-expanded'?: boolean\n  'aria-pressed'?: boolean\n  'data-testid'?: string\n}\n\ninterface StyledButtonProps {\n  $variant: 'primary' | 'secondary' | 'naked'\n  $size: 'small' | 'medium' | 'large'\n}\n\nconst IconButtonStyled = styled.button.withConfig({\n  shouldForwardProp: (prop) => !['$variant', '$size'].includes(prop)\n})<StyledButtonProps>`\n  background-color: ${({ $variant }) => {\n    switch ($variant) {\n      case 'primary':\n        return iconButton.primary.backgroundColor\n      case 'secondary':\n        return iconButton.variants.secondary.backgroundColor\n      case 'naked':\n        return iconButton.variants.naked.backgroundColor\n      default:\n        return iconButton.primary.backgroundColor\n    }\n  }};\n  border: none;\n  border-radius: ${iconButton.primary.borderRadius};\n  transition: ${motion.transition.normal};\n  box-sizing: border-box;\n  display: ${iconButton.primary.display};\n  justify-content: ${iconButton.primary.justifyContent};\n  align-items: ${iconButton.primary.alignItems};\n  height: max-content;\n  cursor: pointer;\n  position: relative;\n\n  /* Size-specific dimensions from component tokens */\n  min-width: ${({ $size }) => iconButton.sizes[$size].minWidth};\n  min-height: ${({ $size }) => iconButton.sizes[$size].minHeight};\n  padding: ${({ $size }) => iconButton.sizes[$size].padding};\n\n  &:hover {\n    background-color: ${({ $variant }) => {\n      switch ($variant) {\n        case 'primary':\n          return iconButton.hover.backgroundColor\n        case 'secondary':\n          return iconButton.variants.secondary.hover.backgroundColor\n        case 'naked':\n          return iconButton.variants.naked.hover.backgroundColor\n        default:\n          return iconButton.hover.backgroundColor\n      }\n    }};\n  }\n\n  &:active {\n    background-color: ${iconButton.active.backgroundColor};\n  }\n\n  &:focus {\n    outline: ${iconButton.focus.outline};\n    outline-offset: ${iconButton.focus.outlineOffset};\n  }\n\n  &:disabled {\n    background-color: ${iconButton.disabled.backgroundColor};\n    cursor: not-allowed;\n  }\n\n  /* High contrast mode support */\n  @media (prefers-contrast: high) {\n    border: 1px solid;\n  }\n\n  /* Reduced motion support */\n  @media (prefers-reduced-motion: reduce) {\n    transition: none;\n  }\n`\n\nexport const IconButton: React.FC<IconButtonProps> = ({ \n  variant, \n  size = 'medium', \n  url, \n  iconName = 'close',\n  onClick,\n  'aria-label': ariaLabel,\n  'aria-describedby': ariaDescribedBy,\n  'aria-expanded': ariaExpanded,\n  'aria-pressed': ariaPressed,\n  'data-testid': dataTestId,\n  disabled,\n  type = 'button',\n  ...htmlProps \n}) => {\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    // Prevent default if disabled\n    if (disabled) {\n      event.preventDefault()\n      return\n    }\n\n    if (onClick) {\n      onClick()\n    } else if (url && url.trim() !== '') {\n      // Use proper navigation instead of direct href assignment\n      if (url.startsWith('http') || url.startsWith('//')) {\n        window.open(url, '_blank', 'noopener,noreferrer')\n      } else {\n        window.location.assign(url)\n      }\n    }\n  }\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLButtonElement>) => {\n    // Handle keyboard activation (Enter and Space)\n    if (disabled) return\n    \n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      handleClick(event as any)\n    }\n  }\n\n  const iconSize = size === 'large' ? 'lg' : size === 'small' ? 'sm' : 'md'\n  \n  const getIconColor = (variant: 'primary' | 'secondary' | 'naked') => {\n    switch (variant) {\n      case 'primary':\n        return 'inverse'\n      case 'secondary':\n        return 'default'\n      case 'naked':\n        return 'default'\n      default:\n        return 'default'\n    }\n  }\n\n  return (\n    <IconButtonStyled \n      $variant={variant} \n      $size={size} \n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      disabled={disabled}\n      type={type}\n      role=\"button\"\n      aria-label={ariaLabel}\n      aria-describedby={ariaDescribedBy}\n      aria-expanded={ariaExpanded}\n      aria-pressed={ariaPressed}\n      aria-disabled={disabled}\n      tabIndex={disabled ? -1 : 0}\n      data-testid={dataTestId}\n      {...htmlProps}\n    >\n      <Icon \n        name={iconName} \n        size={iconSize} \n        iconColor={getIconColor(variant)}\n        aria-hidden=\"true\" // Hide icon from screen readers since button has aria-label\n      />\n    </IconButtonStyled>\n  )\n}\n"]}