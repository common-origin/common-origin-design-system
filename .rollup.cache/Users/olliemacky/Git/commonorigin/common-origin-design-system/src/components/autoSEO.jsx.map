{"version":3,"file":"autoSEO.jsx","sourceRoot":"","sources":["autoSEO.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport { SITE_CONFIG } from '../lib/seoConfig'\n\ninterface AutoSEOProps {\n  // Simple props that match your content structure\n  title?: string\n  description?: string\n  image?: string\n  type?: 'website' | 'article' | 'music'\n  path?: string\n  \n  // Optional advanced props (most people won't need these)\n  noindex?: boolean\n  canonicalUrl?: string\n}\n\n/**\n * Automatic SEO Component\n * \n * Just pass your content and it handles all SEO automatically.\n * No SEO knowledge required!\n */\nexport const AutoSEO: React.FC<AutoSEOProps> = ({\n  title,\n  description,\n  image,\n  type = 'website',\n  path = '',\n  noindex = false,\n  canonicalUrl,\n}) => {\n  // Auto-generate everything\n  const fullTitle = title ? `${title} | ${SITE_CONFIG.name}` : SITE_CONFIG.defaultTitle\n  const fullDescription = description || SITE_CONFIG.defaultDescription\n  const fullImage = image || SITE_CONFIG.defaultOgImage\n  const fullUrl = canonicalUrl || `${SITE_CONFIG.url}${path}`\n  \n  // Convert relative image paths to absolute\n  const absoluteImage = fullImage.startsWith('http') ? fullImage : `${SITE_CONFIG.url}${fullImage}`\n  \n  return (\n    <Head>\n      {/* Basic Meta */}\n      <title>{fullTitle}</title>\n      <meta name=\"description\" content={fullDescription} />\n      <meta name=\"robots\" content={noindex ? 'noindex, nofollow' : 'index, follow'} />\n      \n      {/* Canonical URL */}\n      <link rel=\"canonical\" href={fullUrl} />\n      \n      {/* Open Graph (Facebook, etc.) */}\n      <meta property=\"og:type\" content={type} />\n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={fullDescription} />\n      <meta property=\"og:url\" content={fullUrl} />\n      <meta property=\"og:image\" content={absoluteImage} />\n      <meta property=\"og:site_name\" content={SITE_CONFIG.name} />\n      \n      {/* Twitter Cards */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={fullDescription} />\n      <meta name=\"twitter:image\" content={absoluteImage} />\n      {SITE_CONFIG.twitter && <meta name=\"twitter:site\" content={SITE_CONFIG.twitter} />}\n      \n      {/* Music-specific meta for releases */}\n      {type === 'music' && (\n        <>\n          <meta property=\"og:type\" content=\"music.album\" />\n          <meta property=\"music:duration\" content=\"180\" />\n          <meta property=\"music:album:disc\" content=\"1\" />\n        </>\n      )}\n      \n      {/* JSON-LD Structured Data */}\n      <script\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{\n          __html: JSON.stringify({\n            '@context': 'https://schema.org',\n            '@type': type === 'music' ? 'MusicAlbum' : type === 'article' ? 'Article' : 'WebPage',\n            name: fullTitle,\n            description: fullDescription,\n            url: fullUrl,\n            image: absoluteImage,\n            publisher: {\n              '@type': 'Organization',\n              name: SITE_CONFIG.name,\n              url: SITE_CONFIG.url,\n              logo: `${SITE_CONFIG.url}${SITE_CONFIG.logo}`,\n            },\n          })\n        }}\n      />\n    </Head>\n  )\n}\n\nexport default AutoSEO\n"]}