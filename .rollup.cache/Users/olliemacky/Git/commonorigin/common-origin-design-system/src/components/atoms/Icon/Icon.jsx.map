{"version":3,"file":"Icon.jsx","sourceRoot":"","sources":["Icon.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { FC, ReactElement } from 'react'\nimport styled from 'styled-components'\nimport tokens from '@/styles/tokens.json'\nimport iconsData from '@/styles/icons.json'\n\nexport interface IconProps {\n  name: keyof typeof iconsData\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl'\n  iconColor?: 'default' | 'emphasis' | 'subdued' | 'disabled' | 'inverse' | 'interactive' | 'error' | 'success' | 'warning' | 'inherit'\n  'data-testid'?: string\n}\n\ninterface StyledIconProps {\n  $size: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl'\n  $iconColor: 'default' | 'emphasis' | 'subdued' | 'disabled' | 'inverse' | 'interactive' | 'error' | 'success' | 'warning' | 'inherit'\n}\n\nconst IconStyled = styled.span.withConfig({\n  shouldForwardProp: (prop) => !prop.startsWith('$')\n})<StyledIconProps>`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: ${({ $size }) => tokens.semantic.size.icon[$size]};\n  height: ${({ $size }) => tokens.semantic.size.icon[$size]};\n  \n  svg {\n    width: 100%;\n    height: 100%;\n    display: block;\n  }\n  \n  /* Use semantic icon colors */\n  color: ${({ $iconColor }) => {\n    switch ($iconColor) {\n      case 'default':\n        return tokens.semantic.color.icon.default\n      case 'emphasis':\n        return tokens.semantic.color.icon.emphasis\n      case 'subdued':\n        return tokens.semantic.color.icon.subdued\n      case 'disabled':\n        return tokens.semantic.color.icon.disabled\n      case 'inverse':\n        return tokens.semantic.color.icon.inverse\n      case 'interactive':\n        return tokens.semantic.color.icon.interactive\n      case 'error':\n        return tokens.semantic.color.icon.error\n      case 'success':\n        return tokens.semantic.color.icon.success\n      case 'warning':\n        return tokens.semantic.color.icon.warning\n      case 'inherit':\n        return 'currentColor'\n      default:\n        return tokens.semantic.color.icon.default\n    }\n  }};\n`\n\nexport const Icon: FC<IconProps> = ({\n  name,\n  size = 'lg',\n  iconColor = 'default',\n  'data-testid': dataTestId\n}): ReactElement => {\n  // Get the icon data from the JSON file\n  const iconData = iconsData[name]\n  \n  if (!iconData) {\n    console.warn(`Icon \"${name}\" not found in icons.json`)\n    return <IconStyled $size={size} $iconColor={iconColor} data-testid={dataTestId} />\n  }\n  \n  return (\n    <IconStyled $size={size} $iconColor={iconColor} data-testid={dataTestId}>\n      <svg\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        role=\"img\"\n        aria-label={iconData.name}\n      >\n        <path d={iconData.path} />\n      </svg>\n    </IconStyled>\n  )\n}\n\nexport default Icon"]}