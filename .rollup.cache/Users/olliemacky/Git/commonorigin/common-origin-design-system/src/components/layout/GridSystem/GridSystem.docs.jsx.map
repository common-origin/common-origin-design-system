{"version":3,"file":"GridSystem.docs.jsx","sourceRoot":"","sources":["GridSystem.docs.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ComponentDocumentation } from '../../../lib/docgen/types'\nimport React from 'react'\nimport { Grid, GridCol, ResponsiveGrid } from './GridSystem'\nimport { Typography } from '@/components'\n\nexport const gridSystemDocs: ComponentDocumentation = {\n  id: 'grid-system',\n  name: 'GridSystem',\n  description: 'Flexible, responsive CSS Grid layout utilities for building complex layouts. Includes Grid, GridCol, and ResponsiveGrid components for systematic layout design.',\n  category: 'Layout',\n  props: [\n    // Grid\n    { name: 'cols', type: 'number', required: false, description: 'Number of columns in the grid (default: 12)' },\n    { name: 'gap', type: 'SpacingToken', required: false, description: 'Gap between grid items (uses spacing tokens)' },\n    { name: 'gapX', type: 'SpacingToken', required: false, description: 'Horizontal gap between columns' },\n    { name: 'gapY', type: 'SpacingToken', required: false, description: 'Vertical gap between rows' },\n    // GridCol\n    { name: 'span', type: 'number', required: false, description: 'Number of columns to span' },\n    { name: 'spanSm', type: 'number', required: false, description: 'Columns to span at sm breakpoint' },\n    { name: 'spanMd', type: 'number', required: false, description: 'Columns to span at md breakpoint' },\n    { name: 'spanLg', type: 'number', required: false, description: 'Columns to span at lg breakpoint' },\n    { name: 'spanXl', type: 'number', required: false, description: 'Columns to span at xl breakpoint' },\n    { name: 'order', type: 'number', required: false, description: 'Order of the column' },\n    // ResponsiveGrid\n    { name: 'colsSm', type: 'number', required: false, description: 'Columns at sm breakpoint' },\n    { name: 'colsMd', type: 'number', required: false, description: 'Columns at md breakpoint' },\n    { name: 'colsLg', type: 'number', required: false, description: 'Columns at lg breakpoint' },\n    { name: 'colsXl', type: 'number', required: false, description: 'Columns at xl breakpoint' },\n    // Flex\n    { name: 'gapYLg', type: 'SpacingToken', required: false, description: 'Vertical gap between rows at lg breakpoint' },\n    { name: 'gapYXl', type: 'SpacingToken', required: false, description: 'Vertical gap between rows at xl breakpoint' },\n    { name: 'className', type: 'string', required: false, description: 'Custom className for styling' },\n    { name: 'children', type: 'React.ReactNode', required: true, description: 'Child nodes' }\n  ],\n  tokens: [\n    'base.spacing.*',\n    'base.breakpoint.*',\n    'base.border.radius.*',\n    'semantic.color.background.*',\n    'semantic.color.border.*'\n  ],\n  examples: [\n    {\n      name: 'Basic Grid',\n      description: 'A 12-column grid with two columns.',\n      code: `<Grid cols={12} gap=\"4\">\n  <GridCol span={6}><Typography>Left</Typography></GridCol>\n  <GridCol span={6}><Typography>Right</Typography></GridCol>\n</Grid>`,\n      renderComponent: () => (\n        <Grid cols={12} gap=\"4\">\n          <GridCol span={6}><Typography>Left</Typography></GridCol>\n          <GridCol span={6}><Typography>Right</Typography></GridCol>\n        </Grid>\n      )\n    },\n    {\n      name: 'Responsive Grid',\n      description: 'Grid with different columns at breakpoints.',\n      code: `<ResponsiveGrid cols={1} colsMd={2} colsXl={3} gap=\"4\">\n  <div><Typography>Item 1</Typography></div>\n  <div><Typography>Item 2</Typography></div>\n  <div><Typography>Item 3</Typography></div>\n</ResponsiveGrid>`,\n      renderComponent: () => (\n        <ResponsiveGrid cols={1} colsMd={2} colsXl={3} gap=\"4\">\n          <div style={{ background: '#e9ecef', padding: 16 }}><Typography>Item 1</Typography></div>\n          <div style={{ background: '#e9ecef', padding: 16 }}><Typography>Item 2</Typography></div>\n          <div style={{ background: '#e9ecef', padding: 16 }}><Typography>Item 3</Typography></div>\n        </ResponsiveGrid>\n      )\n    },\n    {\n      name: 'Complex Grid Layout',\n      description: 'Advanced grid with mixed column spans and responsive behavior.',\n      code: `<Grid cols={12} gap=\"4\">\n  <GridCol span={12} spanMd={8} spanLg={9}>\n    <Typography variant=\"h3\">Main Content</Typography>\n    <div style={{ marginTop: '1rem' }}>\n      <Grid cols={6} gap=\"2\">\n        <GridCol span={2}>\n          <Typography variant=\"caption\">Sub 1</Typography>\n        </GridCol>\n        <GridCol span={2}>\n          <Typography variant=\"caption\">Sub 2</Typography>\n        </GridCol>\n        <GridCol span={2}>\n          <Typography variant=\"caption\">Sub 3</Typography>\n        </GridCol>\n        <GridCol span={3}>\n          <Typography variant=\"caption\">Sub 4</Typography>\n        </GridCol>\n        <GridCol span={3}>\n          <Typography variant=\"caption\">Sub 5</Typography>\n        </GridCol>\n      </Grid>\n    </div>\n  </GridCol>\n  <GridCol span={12} spanMd={4} spanLg={3}>\n    <Typography variant=\"body\">Sidebar</Typography>\n  </GridCol>\n  <GridCol span={6} spanMd={4}>\n    <Typography variant=\"body\">Card 1</Typography>\n  </GridCol>\n  <GridCol span={6} spanMd={4}>\n    <Typography variant=\"body\">Card 2</Typography>\n  </GridCol>\n  <GridCol span={12} spanMd={4}>\n    <Typography variant=\"body\">Card 3</Typography>\n  </GridCol>\n  <GridCol span={12}>\n    <Typography variant=\"body\">Footer Content</Typography>\n  </GridCol>\n</Grid>`,\n      renderComponent: () => (\n        <Grid cols={12} gap=\"4\">\n          <GridCol span={12} spanMd={8} spanLg={9}>\n            <div style={{ background: '#007bff', color: 'white', padding: 16, borderRadius: 4 }}>\n              <Typography variant=\"h3\">Main Content</Typography>\n              <div style={{ marginTop: '1rem' }}>\n                <Grid cols={6} gap=\"2\">\n                  <GridCol span={2}>\n                    <div style={{ background: 'rgba(255,255,255,0.2)', padding: 8, borderRadius: 2 }}>\n                      <Typography variant=\"caption\">Sub 1</Typography>\n                    </div>\n                  </GridCol>\n                  <GridCol span={2}>\n                    <div style={{ background: 'rgba(255,255,255,0.2)', padding: 8, borderRadius: 2 }}>\n                      <Typography variant=\"caption\">Sub 2</Typography>\n                    </div>\n                  </GridCol>\n                  <GridCol span={2}>\n                    <div style={{ background: 'rgba(255,255,255,0.2)', padding: 8, borderRadius: 2 }}>\n                      <Typography variant=\"caption\">Sub 3</Typography>\n                    </div>\n                  </GridCol>\n                  <GridCol span={3}>\n                    <div style={{ background: 'rgba(255,255,255,0.2)', padding: 8, borderRadius: 2 }}>\n                      <Typography variant=\"caption\">Sub 4</Typography>\n                    </div>\n                  </GridCol>\n                  <GridCol span={3}>\n                    <div style={{ background: 'rgba(255,255,255,0.2)', padding: 8, borderRadius: 2 }}>\n                      <Typography variant=\"caption\">Sub 5</Typography>\n                    </div>\n                  </GridCol>\n                </Grid>\n              </div>\n            </div>\n          </GridCol>\n          <GridCol span={12} spanMd={4} spanLg={3}>\n            <div style={{ background: '#6c757d', color: 'white', padding: 16, borderRadius: 4 }}>\n              <Typography variant=\"body\">Sidebar</Typography>\n            </div>\n          </GridCol>\n          <GridCol span={6} spanMd={4}>\n            <div style={{ background: '#28a745', color: 'white', padding: 16, borderRadius: 4 }}>\n              <Typography variant=\"body\">Card 1</Typography>\n            </div>\n          </GridCol>\n          <GridCol span={6} spanMd={4}>\n            <div style={{ background: '#ffc107', color: 'black', padding: 16, borderRadius: 4 }}>\n              <Typography variant=\"body\">Card 2</Typography>\n            </div>\n          </GridCol>\n          <GridCol span={12} spanMd={4}>\n            <div style={{ background: '#dc3545', color: 'white', padding: 16, borderRadius: 4 }}>\n              <Typography variant=\"body\">Card 3</Typography>\n            </div>\n          </GridCol>\n          <GridCol span={12}>\n            <div style={{ background: '#e9ecef', padding: 16, borderRadius: 4 }}>\n              <Typography variant=\"body\">Footer Content</Typography>\n            </div>\n          </GridCol>\n        </Grid>\n      )\n    }\n  ],\n  accessibility: {\n    notes: [\n      'Grid layouts are purely presentational and do not affect accessibility tree.',\n      'Ensure semantic HTML structure for content inside grid containers.'\n    ]\n  },\n  notes: [\n    'GridSystem provides CSS Grid-based layout utilities for responsive design.',\n    'Use ResponsiveGrid for breakpoint-based layouts similar to Tailwind CSS patterns.',\n    'All spacing and breakpoints are tokenized for design consistency.',\n    'For flexbox layouts, use the Stack component from the atoms collection.'\n  ]\n}\n"]}