{"version":3,"file":"Breadcrumbs.jsx","sourceRoot":"","sources":["Breadcrumbs.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport styled from 'styled-components'\nimport { Container } from '../../atoms/Container'\nimport { Typography } from '../../atoms/Typography'\nimport tokens from '@/styles/tokens.json'\n\n\n\ninterface Breadcrumb {\n  label: string\n  url: string\n}\n\ninterface BreadcrumbsProps {\n  breadcrumbs: Breadcrumb[]\n  'data-testid'?: string\n}\n\nconst BreadcrumbNavStyled = styled.nav`\n  border-bottom: ${tokens.semantic?.border?.default || '0.0625rem solid #e9ecef'};\n\n  ol {\n    display: flex;\n    align-items: center;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n`\n\nconst BreadcrumbStyled = styled.li`\n  text-transform: uppercase;\n  display: inline-block;\n  margin-right: ${tokens.base?.spacing?.['2'] || '0.5rem'};\n  padding: ${tokens.base?.spacing?.['2'] || '0.5rem'};\n  position: relative;\n\n  &:not(:last-of-type)::before {\n    content: '';\n    background-image: url('/assets/icons/caret.svg');\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-color: transparent;\n    opacity: 0.5;\n    display: inline-block;\n    width: ${tokens.base?.spacing?.['4'] || '1rem'};\n    height: ${tokens.base?.spacing?.['4'] || '1rem'};\n    right: -${tokens.base?.spacing?.['3'] || '0.75rem'};\n    position: absolute;\n  }\n\n  &:last-of-type a {\n    text-decoration: none;\n    color: ${tokens.semantic.color.text.subdued};\n  }\n\n  &:last-of-type p {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    max-width: 180px;\n  }\n\n  > a {\n    text-decoration: underline;\n    color: ${tokens.semantic.color.text.default};\n  }\n`\n\nconst isInternalUrl = (url: string) => {\n  return url.startsWith('/') && !url.startsWith('http')\n}\n\nexport const Breadcrumbs: React.FC<BreadcrumbsProps> = ({ breadcrumbs }) => {\n  return (\n    <Container>\n      <BreadcrumbNavStyled aria-label=\"breadcrumb\">\n        <ol>\n          {breadcrumbs.map((breadcrumb, index) => (\n            <BreadcrumbStyled key={index}>\n              {index === breadcrumbs.length - 1 ? (\n                <Typography variant=\"caption\">{breadcrumb.label}</Typography>\n              ) : isInternalUrl(breadcrumb.url) ? (\n                <Link href={breadcrumb.url}>\n                  <Typography variant=\"caption\">{breadcrumb.label}</Typography>\n                </Link>\n              ) : (\n                <a href={breadcrumb.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <Typography variant=\"caption\">{breadcrumb.label}</Typography>\n                </a>\n              )}\n            </BreadcrumbStyled>\n          ))}\n        </ol>\n      </BreadcrumbNavStyled>\n    </Container>\n  )\n}\n"]}