{"version":3,"file":"Button.jsx","sourceRoot":"","sources":["Button.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport styled from 'styled-components'\nimport tokens from '@/styles/tokens.json'\nimport { Icon } from '../Icon'\nimport iconsData from '@/styles/icons.json'\n\nconst { component: { button }, semantic } = tokens\n\n// Base props shared between button and link\nexport interface BaseButtonProps {\n  variant?: 'primary' | 'secondary' | 'naked'\n  size?: 'small' | 'medium' | 'large'\n  url?: string\n  purpose?: 'button' | 'link'\n  target?: string\n  children: React.ReactNode\n  iconName?: keyof typeof iconsData\n  id?: string\n  'data-testid'?: string\n}\n\n// Button-specific props\nexport interface ButtonProps extends BaseButtonProps, Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, keyof BaseButtonProps> {\n  purpose?: 'button'\n}\n\n// Link-specific props\nexport interface LinkProps extends BaseButtonProps, Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, keyof BaseButtonProps> {\n  purpose: 'link'\n}\n\n// Union type for the component\ntype CustomButtonProps = ButtonProps | LinkProps\n\ninterface StyledButtonProps {\n  $variant: 'primary' | 'secondary' | 'naked'\n  $size: 'small' | 'medium' | 'large'\n}\n\n// Base styles shared between button and link\nconst baseButtonStyles = `\n  box-sizing: border-box;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${tokens.semantic.spacing.layout.xs};\n  height: max-content;\n  cursor: pointer;\n  border: none;\n  text-decoration: none;\n  transition: ${semantic.motion.hover};\n  white-space: nowrap;\n  user-select: none;\n  \n  &:focus {\n    outline: ${button.focus.outline};\n    outline-offset: ${button.focus.outlineOffset};\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n  }\n`\n\n// Dynamic variant styles using component tokens\nconst getVariantStyles = ({ $variant }: StyledButtonProps) => `\n  background-color: ${\n    $variant === 'primary' \n    ? button.primary.backgroundColor \n    : $variant === 'secondary'\n    ? button.variants.secondary.backgroundColor\n    : button.variants.naked.backgroundColor\n  };\n  color: ${\n    $variant === 'primary' \n    ? button.primary.textColor \n    : $variant === 'secondary'\n    ? button.variants.secondary.textColor\n    : button.variants.naked.textColor\n  };\n  \n  &:hover:not(:disabled) {\n    background-color: ${\n      $variant === 'primary' \n      ? button.hover.backgroundColor \n      : $variant === 'secondary'\n      ? button.variants.secondary.hover.backgroundColor\n      : button.variants.naked.hover.backgroundColor\n    };\n  }\n\n  &:active:not(:disabled) {\n    background-color: ${\n      $variant === 'primary' \n      ? button.active.backgroundColor \n      : $variant === 'secondary'\n      ? button.variants.secondary.active.backgroundColor\n      : button.variants.naked.active.backgroundColor\n    };\n  }\n\n  &:disabled {\n    background-color: ${\n      $variant === 'primary' \n      ? button.disabled.backgroundColor \n      : $variant === 'secondary'\n      ? button.variants.secondary.disabled.backgroundColor\n      : button.variants.naked.disabled.backgroundColor\n    };\n    color: ${\n      $variant === 'primary' \n      ? button.disabled.textColor \n      : $variant === 'secondary'\n      ? button.variants.secondary.disabled.textColor\n      : button.variants.naked.disabled.textColor\n    };\n  }\n`\n\n// Dynamic size styles using component tokens\nconst getSizeStyles = ({ $size }: StyledButtonProps) => {\n  switch ($size) {\n    case 'small':\n      return `\n        font: ${button.sizes.small.font};\n        padding: ${button.sizes.small.padding};\n      `\n    case 'medium':\n      return `\n        font: ${button.sizes.medium.font};\n        padding: ${button.sizes.medium.padding};\n      `\n    case 'large':\n      return `\n        font: ${button.sizes.large.font};\n        padding: ${button.sizes.large.padding};\n      `\n    default:\n      return `\n        font: ${button.sizes.large.font};\n        padding: ${button.sizes.large.padding};\n      `\n  }\n}\n\nconst StyledButton = styled.button.withConfig({\n  shouldForwardProp: (prop) => !prop.startsWith('$')\n})<StyledButtonProps>`\n  ${baseButtonStyles}\n  border-radius: ${button.primary.borderRadius};\n  \n  ${getVariantStyles}\n  ${getSizeStyles}\n`\n\nconst StyledLink = styled.a.withConfig({\n  shouldForwardProp: (prop) => !prop.startsWith('$')\n})<StyledButtonProps>`\n  ${baseButtonStyles}\n  border-radius: ${button.primary.borderRadius};\n  \n  ${getVariantStyles}\n  ${getSizeStyles}\n`\n\n// Helper function to get icon size based on button size\nconst getIconSize = (buttonSize?: 'small' | 'medium' | 'large'): 'xs' | 'sm' | 'md' => {\n  switch (buttonSize) {\n    case 'small':\n      return 'xs'\n    case 'medium':\n      return 'sm'\n    case 'large':\n      return 'md'\n    default:\n      return 'md'\n  }\n}\n\n// Helper function to render button content with optional icon\nconst renderButtonContent = (children: React.ReactNode, iconName?: keyof typeof iconsData, size?: 'small' | 'medium' | 'large') => {\n  if (!iconName) return children\n  \n  const iconSize = getIconSize(size)\n  \n  return (\n    <>\n      <Icon name={iconName} size={iconSize} iconColor=\"inherit\" />\n      {children}\n    </>\n  )\n}\n\nexport const Button: React.FC<CustomButtonProps> = ({ \n  variant = \"primary\", \n  size = \"large\", \n  url, \n  purpose = 'button', \n  children, \n  target,\n  iconName,\n  'data-testid': dataTestId,\n  ...rest \n}) => {\n  // For internal links, use Next.js Link\n  if (purpose === 'link' && url && !url.startsWith('http') && !target) {\n    const linkProps = rest as Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, keyof BaseButtonProps>\n    return (\n      <Link href={url} passHref legacyBehavior>\n        <StyledLink \n          $variant={variant} \n          $size={size} \n          data-testid={dataTestId}\n          {...linkProps}\n        >\n          {renderButtonContent(children, iconName, size)}\n        </StyledLink>\n      </Link>\n    )\n  }\n  \n  // For external links or links with target\n  if (purpose === 'link' && url) {\n    const linkProps = rest as Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, keyof BaseButtonProps>\n    return (\n      <StyledLink \n        href={url} \n        target={target} \n        $variant={variant} \n        $size={size}\n        data-testid={dataTestId}\n        {...linkProps}\n      >\n        {renderButtonContent(children, iconName, size)}\n      </StyledLink>\n    )\n  }\n  \n  // For button with URL (legacy support)\n  if (purpose === 'button' && url) {\n    const buttonProps = rest as Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, keyof BaseButtonProps>\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n      // Call any existing onClick handler first\n      if (buttonProps.onClick) {\n        buttonProps.onClick(e)\n      }\n      \n      // Handle navigation\n      if (url.startsWith('http') || target) {\n        window.open(url, target || '_self')\n      } else {\n        window.location.href = url\n      }\n    }\n    \n    return (\n      <StyledButton \n        {...buttonProps}\n        $variant={variant} \n        $size={size}\n        data-testid={dataTestId}\n        onClick={handleClick}\n      >\n        {renderButtonContent(children, iconName, size)}\n      </StyledButton>\n    )\n  }\n  \n  // Regular button\n  const buttonProps = rest as Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, keyof BaseButtonProps>\n  return (\n    <StyledButton \n      $variant={variant} \n      $size={size}\n      data-testid={dataTestId}\n      {...buttonProps}\n    >\n      {renderButtonContent(children, iconName, size)}\n    </StyledButton>\n  )\n}\n"]}