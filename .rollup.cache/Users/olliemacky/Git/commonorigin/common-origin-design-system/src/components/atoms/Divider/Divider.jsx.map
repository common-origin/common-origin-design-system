{"version":3,"file":"Divider.jsx","sourceRoot":"","sources":["Divider.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport tokens from '@/styles/tokens.json'\n\nexport interface DividerProps {\n  /** Variant style of the divider */\n  variant?: 'default' | 'strong' | 'minimal'\n  /** Size variation affecting spacing */\n  size?: 'small' | 'medium' | 'large' | 'xlarge'\n  /** Orientation of the divider */\n  orientation?: 'horizontal' | 'vertical'\n  /** Data test id for testing */\n  'data-testid'?: string\n}\n\ninterface StyledDividerProps {\n  $variant: DividerProps['variant']\n  $size: DividerProps['size']\n  $orientation: DividerProps['orientation']\n}\n\nconst StyledDivider = styled.div.withConfig({\n  shouldForwardProp: (prop) => !prop.startsWith('$')\n})<StyledDividerProps>`\n  border: none;\n  \n  /* Apply orientation */\n  ${({ $orientation = 'horizontal' }) => {\n    if ($orientation === 'vertical') {\n      return `\n        display: inline-block;\n        height: auto;\n        align-self: stretch;\n        border-left: 1px solid;\n        border-top: none;\n      `\n    }\n    return `border-top: 1px solid;`\n  }}\n  \n  /* Apply variant styles */\n  ${({ $variant = 'default', $orientation = 'horizontal' }) => {\n    const borderProperty = $orientation === 'vertical' ? 'border-left' : 'border-top'\n    switch ($variant) {\n      case 'strong':\n        return `${borderProperty}: ${tokens.component.separator.variants.strong.border};`\n      case 'minimal':\n        return `${borderProperty}: ${tokens.component.separator.variants.minimal.border};`\n      case 'default':\n      default:\n        return `${borderProperty}: ${tokens.component.separator.variants.default.border};`\n    }\n  }}\n  \n  /* Apply size styles (spacing) */\n  ${({ $size = 'large', $variant = 'default', $orientation = 'horizontal' }) => {\n    if ($variant === 'minimal' && $orientation === 'horizontal') {\n      // Minimal variant always uses its predefined spacing for horizontal\n      return `margin: ${tokens.component.separator.variants.minimal.margin};`\n    }\n    \n    if ($orientation === 'vertical') {\n      // Vertical orientation uses horizontal margins (left/right)\n      switch ($size) {\n        case 'small':\n          return `margin: 0 ${tokens.semantic.spacing.separator.sm};`\n        case 'medium':\n          return `margin: 0 ${tokens.semantic.spacing.separator.md};`\n        case 'xlarge':\n          return `margin: 0 ${tokens.semantic.spacing.separator.xl};`\n        case 'large':\n        default:\n          return `margin: 0 ${tokens.semantic.spacing.separator.lg};`\n      }\n    }\n    \n    // Horizontal orientation uses vertical margins (top/bottom)\n    switch ($size) {\n      case 'small':\n        return `margin: ${tokens.component.separator.sizes.small.margin};`\n      case 'medium':\n        return `margin: ${tokens.component.separator.sizes.medium.margin};`\n      case 'xlarge':\n        return `margin: ${tokens.component.separator.sizes.xlarge.margin};`\n      case 'large':\n      default:\n        return `margin: ${tokens.component.separator.sizes.large.margin};`\n    }\n  }}\n`\n\n/**\n * Divider is an atomic component that provides visual separation between content sections.\n * \n * Features:\n * - Multiple variants (default, strong, minimal)\n * - Size variations for different spacing needs\n * - Horizontal and vertical orientations\n * - Semantic token usage for consistent styling\n * - Full accessibility support\n * \n * @example\n * ```tsx\n * <Divider />\n * <Divider variant=\"strong\" size=\"xlarge\" />\n * <Divider variant=\"minimal\" />\n * <Divider orientation=\"vertical\" />\n * ```\n */\nexport const Divider: React.FC<DividerProps> = ({\n  variant = 'default',\n  size = 'large',\n  orientation = 'horizontal',\n  'data-testid': dataTestId,\n}) => {\n  return (\n    <StyledDivider\n      $variant={variant}\n      $size={size}\n      $orientation={orientation}\n      data-testid={dataTestId}\n      role=\"separator\"\n      aria-orientation={orientation}\n    />\n  )\n}\n"]}