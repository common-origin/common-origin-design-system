{"version":3,"file":"postBody.jsx","sourceRoot":"","sources":["postBody.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,MAAM,MAAM,mBAAmB,CAAA;AACtC,OAAO,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,GAAG,CAAA;AAC5C,OAAO,MAAM,MAAM,sBAAsB,CAAA;AAEzB,IAAA,OAAO,GAAO,MAAM,aAAb,CAAa;AAOpC,IAAM,SAAS,GAAG,MAAM,CAAC,GAAG,8GAAwB,iBACrC,EAAmC,wBAEjD,KAFc,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,SAAS,IAAI,OAAO,EAA1B,CAA0B,CAEjD,CAAA;AAED,IAAM,aAAa,GAAG,MAAM,CAAC,GAAG,qKAAA,2FAIvB,EAAU,KAClB,KADQ,OAAO,CAAC,CAAC,CAAC,CAClB,CAAA;AAED,IAAM,WAAW,GAAG,MAAM,CAAC,GAAG,mMAAA,gIAO7B,IAAA,CAAA;AAED,MAAM,CAAC,IAAM,QAAQ,GAAG,UAAC,EAGjB;QAFN,OAAO,aAAA,EACP,GAAG,SAAA;IAEH,IAAK,GAAG,KAAK,WAAW,EAAG;QACzB,OAAO,CACL,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAC1B;QAAA,CAAC,GAAG,CACF,SAAS,CAAC,UAAU,CACpB,uBAAuB,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,EAE/C;QAAA,CAAC,gBAAgB,CAAC,AAAD,EACjB;QAAA,CAAC,MAAM,CACL,OAAO,CAAC,MAAM,CACd,GAAG,CAAC,YAAY,CAEhB;;QACF,EAAE,MAAM,CACV;MAAA,EAAE,SAAS,CAAC,CACb,CAAA;KACF;SAAM,IAAK,GAAG,KAAK,QAAQ,EAAG;QAC7B,OAAO,CACL,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAC1B;QAAA,CAAC,GAAG,CACF,SAAS,CAAC,UAAU,CACpB,uBAAuB,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,EAE/C;QAAA,CAAC,gBAAgB,CAAC,AAAD,EACjB;QAAA,CAAC,MAAM,CACL,OAAO,CAAC,MAAM,CACd,GAAG,CAAC,SAAS,CAEb;;QACF,EAAE,MAAM,CACV;MAAA,EAAE,SAAS,CAAC,CACb,CAAA;KACF;SAAM,IAAK,GAAG,KAAK,KAAK,EAAG;QAC1B,OAAO,CACL,CAAC,aAAa,CACZ;QAAA,CAAC,WAAW,CACV,SAAS,CAAC,UAAU,CACpB,uBAAuB,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,EAEjD;MAAA,EAAE,aAAa,CAAC,CACjB,CAAA;KACF;SAAM,IAAK,GAAG,KAAK,SAAS,EAAG;QAC9B,OAAO,CACL,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAC1B;QAAA,CAAC,GAAG,CACF,SAAS,CAAC,UAAU,CACpB,uBAAuB,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,EAEjD;MAAA,EAAE,SAAS,CAAC,CACb,CAAA;KACF;SAAM;QACL,OAAO,CACL,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAC1B;QAAA,CAAC,GAAG,CACF,SAAS,CAAC,UAAU,CACpB,uBAAuB,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,EAEjD;MAAA,EAAE,SAAS,CAAC,CACb,CAAA;KACF;AACH,CAAC,CAAA","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Button, SectionSeparator } from '.'\nimport tokens from '@/styles/tokens.json'\n\nconst { base: { spacing } } = tokens\n\ntype Props = {\n  content: string\n  tag: string\n}\n\nconst Container = styled.div<{ $maxWidth?: string }>`\n  max-width: ${props => props.$maxWidth || '64rem'};\n  margin: 0 auto;\n`\n\nconst GridContainer = styled.div`\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  gap: ${spacing[8]};\n`\n\nconst GridContent = styled.div`\n  grid-column: span 12;\n  \n  @media (min-width: 1280px) {\n    grid-column: span 9 / 13;\n    grid-column-start: 4;\n  }\n`\n\nexport const PostBody = ({ \n  content,\n  tag,\n}: Props) => {\n  if ( tag === 'portfolio' ) {\n    return (\n      <Container $maxWidth=\"64rem\">\n        <div\n          className=\"markdown\"\n          dangerouslySetInnerHTML={{ __html: content }}\n        />\n        <SectionSeparator />\n        <Button\n          purpose='link'\n          url='/portfolio'\n        >\n          Back to Portfolio\n        </Button>\n      </Container>\n    )\n  } else if ( tag === 'design' ) {\n    return (\n      <Container $maxWidth=\"64rem\">\n        <div\n          className=\"markdown\"\n          dangerouslySetInnerHTML={{ __html: content }}\n        />\n        <SectionSeparator />\n        <Button\n          purpose='link'\n          url='/design'\n        >\n          Back to all Design\n        </Button>\n      </Container>\n    )\n  } else if ( tag === 'art' ) {\n    return (\n      <GridContainer>\n        <GridContent\n          className=\"markdown\"\n          dangerouslySetInnerHTML={{ __html: content }}\n        />\n      </GridContainer>\n    )\n  } else if ( tag === 'release' ) {\n    return (\n      <Container $maxWidth=\"48rem\">\n        <div\n          className=\"markdown\"\n          dangerouslySetInnerHTML={{ __html: content }}\n        />\n      </Container>\n    )\n  } else {\n    return (\n      <Container $maxWidth=\"64rem\">\n        <div\n          className=\"markdown\"\n          dangerouslySetInnerHTML={{ __html: content }}\n        />\n      </Container>\n    )\n  }\n}\n"]}