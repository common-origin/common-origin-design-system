{"version":3,"file":"releaseHeader.jsx","sourceRoot":"","sources":["releaseHeader.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,MAAM,MAAM,mBAAmB,CAAA;AAEtC,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,IAAI,CAAA;AACpE,OAAO,MAAM,MAAM,uBAAuB,CAAA;AAE1B,IAAA,OAAO,GAAO,MAAM,aAAb,CAAa;AAapC,IAAM,aAAa,GAAG,MAAM,CAAC,GAAG,uJAAA,wEAGvB,EAAU,GAAI,EAAU,KAChC,KADQ,OAAO,CAAC,CAAC,CAAC,EAAI,OAAO,CAAC,CAAC,CAAC,CAChC,CAAA;AAED,IAAM,aAAa,GAAG,MAAM,CAAC,GAAG,kOAAA,+JAU/B,IAAA,CAAA;AAED,IAAM,WAAW,GAAG,MAAM,CAAC,GAAG,kOAAA,+JAU7B,IAAA,CAAA;AAED,IAAM,kBAAkB,GAAG,MAAM,CAAC,GAAG,mSAAA,kBACrB,EAAU,sBACP,EAA4B,8IAO3B,EAAU,wBACT,EAAU,UAE9B,KAXe,OAAO,CAAC,CAAC,CAAC,EACP,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAO3B,OAAO,CAAC,CAAC,CAAC,EACT,OAAO,CAAC,CAAC,CAAC,CAE9B,CAAA;AAED,IAAM,cAAc,GAAG,MAAM,CAAC,GAAG,4FAAA,kBACjB,EAAU,KACzB,KADe,OAAO,CAAC,CAAC,CAAC,CACzB,CAAA;AAED,MAAM,CAAC,IAAM,aAAa,GAAG,UAAC,EAQrB;QAPP,KAAK,WAAA,EACL,WAAW,iBAAA,EACX,UAAU,gBAAA,EACV,IAAI,UAAA,EACJ,MAAM,YAAA,EACN,MAAM,YAAA,EACN,OAAO,aAAA;IAEP,IAAM,cAAc,GAAG,UAAG,MAAM,gBAAM,WAAW,CAAE,CAAA;IAEnD,OAAO,CACL,CAAC,aAAa,CACZ;MAAA,CAAC,aAAa,CACZ;QAAA,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAClD;QAAA,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAChC;UAAA,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,KAAK,IAAK,OAAA,CACrB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,EAAG,CAC3C,EAFsB,CAEtB,CAAC,CACJ;QAAA,EAAE,KAAK,CACP;QAAA,CAAC,cAAc,CACb;UAAA,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAChC;YAAA,CAAC,GAAG,CACF,SAAS,CAAC,UAAU,CACpB,uBAAuB,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,EAE/C;YAAA,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,aAAa,EAAC,CAAC,CAC/E;;YACF,EAAE,MAAM,CACV;UAAA,EAAE,KAAK,CACT;QAAA,EAAE,cAAc,CAClB;MAAA,EAAE,aAAa,CACf;MAAA,CAAC,WAAW,CACV;QAAA,CAAC,kBAAkB,CACjB;UAAA,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,EAC5C;QAAA,EAAE,kBAAkB,CACtB;MAAA,EAAE,WAAW,CACf;IAAA,EAAE,aAAa,CAAC,CACjB,CAAA;AACH,CAAC,CAAA","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport type Track from '../../interfaces/track'\nimport { Button, CoverImage, PageTitle, Stack, TrackItem } from './'\nimport tokens from '../styles/tokens.json'\n\nconst { base: { spacing } } = tokens\n\ntype Props = {\n  title: string\n  recordLabel: string\n  coverImage: string\n  link?: string\n  artist: string\n  slug: string\n  tracks: Track[]\n  content: string\n}\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  gap: ${spacing[8]} ${spacing[8]};\n`\n\nconst ContentColumn = styled.div`\n  grid-column: span 12;\n\n  @media (min-width: 1024px) {\n    grid-column: span 6;\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: span 5;\n  }\n`\n\nconst ImageColumn = styled.div`\n  grid-column: span 12;\n\n  @media (min-width: 1024px) {\n    grid-column: span 6;\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: span 7;\n  }\n`\n\nconst RecordCoverWrapper = styled.div`\n  margin-top: ${spacing[4]};\n  border-radius: ${tokens.base.border.radius[6]};\n  overflow: hidden;\n\n  @media (max-width: 640px) {\n    height: 100%;\n    border-radius: 0;\n    min-width: 100vw;\n    margin-left: -${spacing[6]};\n    margin-right: -${spacing[6]};\n  }\n`\n\nconst ContentWrapper = styled.div`\n  margin-top: ${spacing[4]};\n`\n\nexport const ReleaseHeader = ({ \n  title,\n  recordLabel,\n  coverImage, \n  link,\n  artist,\n  tracks,\n  content,\n }: Props) => {\n  const subtitleString = `${artist} | ${recordLabel}`\n\n  return (\n    <GridContainer>\n      <ContentColumn>\n        <PageTitle title={title} subtitle={subtitleString} />\n        <Stack direction='column' gap=\"xs\">\n          {tracks.map((track) => (\n            <TrackItem track={track} key={track.id} />\n          ))}\n        </Stack>\n        <ContentWrapper>\n          <Stack direction='column' gap=\"lg\">\n            <div\n              className=\"markdown\"\n              dangerouslySetInnerHTML={{ __html: content }}\n            />\n            <Button url={link} purpose='link' target='_blank' style={{ width: 'max-content'}}>\n              Get this release\n            </Button>\n          </Stack>\n        </ContentWrapper>\n      </ContentColumn>\n      <ImageColumn>\n        <RecordCoverWrapper>\n          <CoverImage title={title} src={coverImage} />\n        </RecordCoverWrapper>\n      </ImageColumn>\n    </GridContainer>\n  )\n}\n"]}