{"version":3,"file":"trackItem.jsx","sourceRoot":"","sources":["trackItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport type Track from '../../interfaces/track'\nimport { IconButton, Stack, Typography } from './'\nimport tokens from '@/styles/tokens.json'\n\nconst { base: { spacing, color, border } } = tokens\n\ntype TrackItemProps = {\n  track: Track\n}\n\nconst TrackItemStyled = styled.div<{ $isPlaying: boolean }>`\n  display: flex;\n  width: 100%;\n  background-color: ${({ $isPlaying }) => $isPlaying ? color.neutral['000'] : tokens.semantic.color.background.surface};\n  padding: ${spacing[2]};\n  padding-left: ${spacing[4]};\n  border-radius: ${border.radius[3]};\n  transition: background-color 0.2s ease;\n`\n\nconst TrackContentWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  align-items: center;\n\n  button {\n    background-color: transparent;\n    margin: 0;\n    transition: background-color 0.2s ease;\n\n    &:hover {\n      background-color: ${color.neutral[300]};\n    }\n\n    &:focus {\n      outline: 2px solid ${tokens.semantic.color.border.strong};\n      outline-offset: 2px;\n    }\n  }\n`\n\nconst TrackingBar = styled.div<{ $isPlaying: boolean }>`\n  width: 100%;\n  height: ${({ $isPlaying }) => $isPlaying ? '8px' : '0px'};\n  background-color: ${color.neutral[400]};\n  cursor: pointer;\n  position: relative;\n  margin: ${spacing[2]} 0;\n  border-radius: ${border.radius[1]};\n  overflow: hidden;\n  transition: height 0.2s ease;\n\n  &:focus {\n    outline: 2px solid ${tokens.semantic.color.border.strong};\n    outline-offset: 2px;\n  }\n`\n\nconst Progress = styled.div<{ $progress: number }>`\n  height: 100%;\n  background-color: ${tokens.semantic.color.background.inverse};\n  width: ${({ $progress }) => $progress}%;\n  transition: width 0.1s ease;\n  border-radius: ${border.radius[1]};\n`\n\nconst TrackContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const TrackItem: React.FC<TrackItemProps> = ({ track }) => {\n  const audioRef = useRef<HTMLAudioElement>(null)\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [currentTime, setCurrentTime] = useState(0)\n  const [duration, setDuration] = useState(0)\n\n  useEffect(() => {\n    const audio = audioRef.current\n    if (audio) {\n      const updateCurrentTime = () => setCurrentTime(audio.currentTime)\n      const updateDuration = () => setDuration(audio.duration)\n      const handleEnded = () => setIsPlaying(false)\n\n      audio.addEventListener('timeupdate', updateCurrentTime)\n      audio.addEventListener('loadedmetadata', updateDuration)\n      audio.addEventListener('ended', handleEnded)\n\n      return () => {\n        audio.removeEventListener('timeupdate', updateCurrentTime)\n        audio.removeEventListener('loadedmetadata', updateDuration)\n        audio.removeEventListener('ended', handleEnded)\n      }\n    }\n    return undefined\n  }, [track.audioUrl])\n\n  const progress = duration ? (currentTime / duration) * 100 : 0\n\n  const handleProgressBarClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    const target = e.currentTarget\n    const rect = target.getBoundingClientRect()\n    const clickPosition = e.clientX - rect.left\n    const totalWidth = rect.width\n    const clickPositionRatio = clickPosition / totalWidth\n    const newCurrentTime = duration * clickPositionRatio\n    \n    if (audioRef.current) {\n      audioRef.current.currentTime = newCurrentTime\n    }\n  }\n\n  const handleProgressBarKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n      e.preventDefault()\n      const audio = audioRef.current\n      if (audio) {\n        const seekAmount = 5 // seconds\n        const newTime = e.key === 'ArrowLeft' \n          ? Math.max(0, audio.currentTime - seekAmount)\n          : Math.min(duration, audio.currentTime + seekAmount)\n        audio.currentTime = newTime\n      }\n    }\n  }\n\n  const togglePlayPause = () => {\n    const audio = audioRef.current\n    if (audio) {\n      if (isPlaying) {\n        audio.pause()\n      } else {\n        audio.play()\n      }\n      setIsPlaying(!isPlaying)\n    }\n  }\n\n  const resetTrack = () => {\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0\n    }\n  }\n\n  const formatTime = (time: number): string => {\n    const minutes = Math.floor(time / 60)\n    const seconds = Math.floor(time % 60)\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`\n  }\n\n  return (\n    <TrackItemStyled $isPlaying={isPlaying}>\n      <audio \n        ref={audioRef} \n        src={track.audioUrl} \n        preload=\"none\"\n        aria-label={`Audio track: ${track.title}`}\n      />\n      <TrackContainer>\n        <TrackContentWrapper>\n          <Stack direction='row' gap='sm' alignItems='center'>\n            <Typography variant='body' color='default'>{track.title}</Typography>\n            {isPlaying && duration > 0 && (\n              <Typography variant='small' color='subdued'>\n                {formatTime(currentTime)} / {formatTime(duration)}\n              </Typography>\n            )}\n          </Stack>\n          <Stack direction='row' gap='sm' alignItems='center'>\n            {isPlaying && (\n              <IconButton \n                iconName='playBack' \n                size='small' \n                variant='secondary' \n                onClick={resetTrack}\n                aria-label='Reset track to beginning'\n              />\n            )}\n            <IconButton \n              iconName={isPlaying ? 'pause' : 'play'} \n              size='small' \n              variant='secondary' \n              onClick={togglePlayPause}\n              aria-label={isPlaying ? 'Pause track' : 'Play track'}\n            />\n          </Stack>\n        </TrackContentWrapper>\n        {isPlaying && (\n          <TrackingBar \n            $isPlaying={isPlaying} \n            onClick={handleProgressBarClick}\n            onKeyDown={handleProgressBarKeyDown}\n            tabIndex={0}\n            role=\"slider\"\n            aria-label=\"Track progress\"\n            aria-valuemin={0}\n            aria-valuemax={duration}\n            aria-valuenow={currentTime}\n            aria-valuetext={`${formatTime(currentTime)} of ${formatTime(duration)}`}\n          >\n            <Progress $progress={progress} />\n          </TrackingBar>\n        )}\n      </TrackContainer>\n    </TrackItemStyled>\n  )\n}"]}